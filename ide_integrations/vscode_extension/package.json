{
  "name": "testpilot-vscode",
  "displayName": "TestPilot - AI Test Generation",
  "description": "Revolutionary AI-powered test generation, execution, and triage for Python projects",
  "version": "1.0.0",
  "publisher": "testpilot",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Testing",
    "Machine Learning",
    "Other"
  ],
  "keywords": [
    "testing",
    "ai",
    "pytest",
    "test generation",
    "python",
    "automation"
  ],
  "activationEvents": [
    "onLanguage:python"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "testpilot.generateTests",
        "title": "Generate Tests",
        "category": "TestPilot",
        "icon": "$(rocket)"
      },
      {
        "command": "testpilot.generateTestsEnhanced",
        "title": "Generate Tests (Enhanced)",
        "category": "TestPilot",
        "icon": "$(sparkle)"
      },
      {
        "command": "testpilot.generateIntegrationTests",
        "title": "Generate Integration Tests",
        "category": "TestPilot",
        "icon": "$(link)"
      },
      {
        "command": "testpilot.runTests",
        "title": "Run Tests",
        "category": "TestPilot",
        "icon": "$(play)"
      },
      {
        "command": "testpilot.runTestsWithCoverage",
        "title": "Run Tests with Coverage",
        "category": "TestPilot",
        "icon": "$(graph)"
      },
      {
        "command": "testpilot.triageTests",
        "title": "Triage Test Failures",
        "category": "TestPilot",
        "icon": "$(bug)"
      },
      {
        "command": "testpilot.interactive",
        "title": "Interactive Mode",
        "category": "TestPilot",
        "icon": "$(comment-discussion)"
      },
      {
        "command": "testpilot.configure",
        "title": "Configure TestPilot",
        "category": "TestPilot",
        "icon": "$(gear)"
      },
      {
        "command": "testpilot.viewProviders",
        "title": "View AI Providers",
        "category": "TestPilot",
        "icon": "$(robot)"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "testpilot.generateTests",
          "when": "resourceExtname == .py",
          "group": "testpilot@1"
        },
        {
          "command": "testpilot.generateTestsEnhanced",
          "when": "resourceExtname == .py",
          "group": "testpilot@2"
        },
        {
          "command": "testpilot.generateIntegrationTests",
          "when": "resourceExtname == .py",
          "group": "testpilot@3"
        }
      ],
      "editor/context": [
        {
          "command": "testpilot.generateTests",
          "when": "editorLangId == python",
          "group": "testpilot@1"
        },
        {
          "command": "testpilot.generateTestsEnhanced",
          "when": "editorLangId == python",
          "group": "testpilot@2"
        }
      ],
      "editor/title": [
        {
          "command": "testpilot.generateTests",
          "when": "editorLangId == python",
          "group": "navigation@1"
        },
        {
          "command": "testpilot.runTests",
          "when": "resourceFilename =~ /test_.*\\.py$/",
          "group": "navigation@2"
        }
      ],
      "commandPalette": [
        {
          "command": "testpilot.generateTests",
          "when": "editorLangId == python"
        },
        {
          "command": "testpilot.generateTestsEnhanced",
          "when": "editorLangId == python"
        },
        {
          "command": "testpilot.generateIntegrationTests",
          "when": "editorLangId == python"
        },
        {
          "command": "testpilot.runTests",
          "when": "resourceFilename =~ /test_.*\\.py$/"
        },
        {
          "command": "testpilot.runTestsWithCoverage",
          "when": "resourceFilename =~ /test_.*\\.py$/"
        },
        {
          "command": "testpilot.triageTests",
          "when": "resourceFilename =~ /test_.*\\.py$/"
        }
      ]
    },
    "keybindings": [
      {
        "command": "testpilot.generateTests",
        "key": "ctrl+shift+t",
        "mac": "cmd+shift+t",
        "when": "editorLangId == python"
      },
      {
        "command": "testpilot.generateTestsEnhanced",
        "key": "ctrl+shift+alt+t",
        "mac": "cmd+shift+alt+t",
        "when": "editorLangId == python"
      },
      {
        "command": "testpilot.runTests",
        "key": "ctrl+shift+r",
        "mac": "cmd+shift+r",
        "when": "resourceFilename =~ /test_.*\\.py$/"
      },
      {
        "command": "testpilot.interactive",
        "key": "ctrl+shift+i",
        "mac": "cmd+shift+i",
        "when": "editorLangId == python"
      }
    ],
    "configuration": {
      "title": "TestPilot",
      "properties": {
        "testpilot.defaultProvider": {
          "type": "string",
          "default": "openai",
          "enum": [
            "openai",
            "anthropic",
            "ollama"
          ],
          "description": "Default AI provider for test generation"
        },
        "testpilot.defaultModel": {
          "type": "string",
          "default": "gpt-4o",
          "description": "Default model name for the selected provider"
        },
        "testpilot.enhancedMode": {
          "type": "boolean",
          "default": true,
          "description": "Use enhanced mode with code analysis by default"
        },
        "testpilot.outputDirectory": {
          "type": "string",
          "default": "./generated_tests",
          "description": "Directory for generated test files"
        },
        "testpilot.autoRunTests": {
          "type": "boolean",
          "default": false,
          "description": "Automatically run tests after generation"
        },
        "testpilot.showCoverage": {
          "type": "boolean",
          "default": true,
          "description": "Show coverage information when running tests"
        },
        "testpilot.githubRepo": {
          "type": "string",
          "default": "",
          "description": "Default GitHub repository for issue creation (format: owner/repo)"
        },
        "testpilot.pythonPath": {
          "type": "string",
          "default": "python",
          "description": "Path to Python executable"
        }
      }
    },
    "views": {
      "explorer": [
        {
          "id": "testpilotView",
          "name": "TestPilot",
          "when": "workspaceHasTestPilot"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "testpilot",
          "title": "TestPilot",
          "icon": "$(rocket)"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "package": "vsce package"
  },
  "devDependencies": {
    "@types/vscode": "^1.74.0",
    "@types/node": "16.x",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "eslint": "^8.28.0",
    "typescript": "^4.9.4",
    "@vscode/test-electron": "^2.2.0",
    "vsce": "^2.15.0"
  },
  "dependencies": {
    "child_process": "^1.0.2"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/testpilot.git"
  },
  "bugs": {
    "url": "https://github.com/yourusername/testpilot/issues"
  },
  "homepage": "https://github.com/yourusername/testpilot#readme",
  "license": "MIT"
}